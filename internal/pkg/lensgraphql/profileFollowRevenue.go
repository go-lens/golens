// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package lensgraphql

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type ProfileFollowRevenueQueryRequest struct {
	// The profile id
	ProfileId string `json:"profileId"`
}

// GetProfileId returns ProfileFollowRevenueQueryRequest.ProfileId, and is useful for accessing the field via an interface.
func (v *ProfileFollowRevenueQueryRequest) GetProfileId() string { return v.ProfileId }

// __profileFollowRevenueInput is used internally by genqlient
type __profileFollowRevenueInput struct {
	Request ProfileFollowRevenueQueryRequest `json:"request"`
}

// GetRequest returns __profileFollowRevenueInput.Request, and is useful for accessing the field via an interface.
func (v *__profileFollowRevenueInput) GetRequest() ProfileFollowRevenueQueryRequest { return v.Request }

// profileFollowRevenueProfileFollowRevenueFollowRevenueResult includes the requested fields of the GraphQL type FollowRevenueResult.
type profileFollowRevenueProfileFollowRevenueFollowRevenueResult struct {
	Revenues []profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate `json:"revenues"`
}

// GetRevenues returns profileFollowRevenueProfileFollowRevenueFollowRevenueResult.Revenues, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResult) GetRevenues() []profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate {
	return v.Revenues
}

// profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate includes the requested fields of the GraphQL type RevenueAggregate.
type profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate struct {
	Total profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount `json:"total"`
}

// GetTotal returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate.Total, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregate) GetTotal() profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount {
	return v.Total
}

// profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount includes the requested fields of the GraphQL type Erc20Amount.
type profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount struct {
	// The erc20 token info
	Asset profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20 `json:"asset"`
	// Floating point number as string (e.g. 42.009837). It could have the entire
	// precision of the Asset or be truncated to the last significant decimal.
	Value string `json:"value"`
}

// GetAsset returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount.Asset, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount) GetAsset() profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20 {
	return v.Asset
}

// GetValue returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount.Value, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20Amount) GetValue() string {
	return v.Value
}

// profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20 includes the requested fields of the GraphQL type Erc20.
// The GraphQL type's documentation follows.
//
// The erc20 type
type profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20 struct {
	// Symbol for the token
	Symbol string `json:"symbol"`
	// Name of the symbol
	Name string `json:"name"`
	// Decimal places for the token
	Decimals int `json:"decimals"`
	// The erc20 address
	Address string `json:"address"`
}

// GetSymbol returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20.Symbol, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20) GetSymbol() string {
	return v.Symbol
}

// GetName returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20.Name, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20) GetName() string {
	return v.Name
}

// GetDecimals returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20.Decimals, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20) GetDecimals() int {
	return v.Decimals
}

// GetAddress returns profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20.Address, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueProfileFollowRevenueFollowRevenueResultRevenuesRevenueAggregateTotalErc20AmountAssetErc20) GetAddress() string {
	return v.Address
}

// profileFollowRevenueResponse is returned by profileFollowRevenue on success.
type profileFollowRevenueResponse struct {
	ProfileFollowRevenue profileFollowRevenueProfileFollowRevenueFollowRevenueResult `json:"profileFollowRevenue"`
}

// GetProfileFollowRevenue returns profileFollowRevenueResponse.ProfileFollowRevenue, and is useful for accessing the field via an interface.
func (v *profileFollowRevenueResponse) GetProfileFollowRevenue() profileFollowRevenueProfileFollowRevenueFollowRevenueResult {
	return v.ProfileFollowRevenue
}

func profileFollowRevenue(
	ctx context.Context,
	client graphql.Client,
	request ProfileFollowRevenueQueryRequest,
) (*profileFollowRevenueResponse, error) {
	req := &graphql.Request{
		OpName: "profileFollowRevenue",
		Query: `
query profileFollowRevenue ($request: ProfileFollowRevenueQueryRequest!) {
	profileFollowRevenue(request: $request) {
		revenues {
			total {
				asset {
					symbol
					name
					decimals
					address
				}
				value
			}
		}
	}
}
`,
		Variables: &__profileFollowRevenueInput{
			Request: request,
		},
	}
	var err error

	var data profileFollowRevenueResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
